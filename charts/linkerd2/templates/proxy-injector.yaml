---
###
### Proxy Injector
###
---
{{ $_ := set .Values.global.proxy "workloadKind" "deployment" -}}
{{ $_ := set .Values.global.proxy "component" "linkerd-proxy-injector" -}}
{{ include "linkerd.proxy.validation" .Values.global.proxy -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    {{.Values.global.createdByAnnotation}}: {{default (printf "linkerd/helm %s" .Values.global.linkerdVersion) .Values.global.cliVersion}}
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: {{default .Values.global.linkerdVersion .Values.global.controllerImageVersion}}
    {{.Values.global.controllerComponentLabel}}: proxy-injector
    {{.Values.global.controllerNamespaceLabel}}: {{.Values.global.namespace}}
  name: linkerd-proxy-injector
  namespace: {{.Values.global.namespace}}
spec:
  replicas: {{.Values.controllerReplicas}}
  selector:
    matchLabels:
      {{.Values.global.controllerComponentLabel}}: proxy-injector
  {{- if .Values.enablePodAntiAffinity }}
  strategy:
    rollingUpdate:
      maxUnavailable: 1
  {{- end }}
  template:
    metadata:
      annotations:
        {{- if empty .Values.global.cliVersion }}
        checksum/config: {{ include (print $.Template.BasePath "/proxy-injector-rbac.yaml") . | sha256sum }}
        {{- end }}
        {{.Values.global.createdByAnnotation}}: {{default (printf "linkerd/helm %s" .Values.global.linkerdVersion) .Values.global.cliVersion}}
        {{- include "partials.proxy.annotations" .Values.global.proxy| nindent 8}}
      labels:
        {{.Values.global.controllerComponentLabel}}: proxy-injector
        {{.Values.global.controllerNamespaceLabel}}: {{.Values.global.namespace}}
        {{.Values.global.workloadNamespaceLabel}}: {{.Values.global.namespace}}
        {{- include "partials.proxy.labels" .Values.global.proxy | nindent 8}}
    spec:
      {{- if .Values.tolerations -}}
      {{- include "linkerd.tolerations" . | nindent 6 }}
      {{- end -}}
      {{- include "linkerd.node-selector" . | nindent 6 }}
      {{- if .Values.enablePodAntiAffinity -}}
      {{- $local := dict "component" "proxy-injector" "label" .Values.global.controllerComponentLabel -}}
      {{- include "linkerd.pod-affinity" $local | nindent 6 -}}
      {{- end }}
      containers:
      - args:
        - proxy-injector
        {{- list "log-level" .Values.global.controllerLogLevel | include "partials.FlagIfNotEmpty" -}}
        {{- list "controller-namespace" .Values.global.namespace | include "partials.FlagIfNotEmpty" -}}
        {{- list "identity-trust-domain" .Values.global.identityTrustDomain | include "partials.FlagIfNotEmpty" -}}
        {{- list "identity-issuance-lifetime" .Values.identity.issuer.issuanceLifetime | include "partials.FlagIfNotEmpty" -}}
        {{- list "identity-clock-skew-allowance" .Values.identity.issuer.clockSkewAllowance | include "partials.FlagIfNotEmpty" -}}
        {{- list "identity-trust-anchors-pem" (b64enc .Values.global.identityTrustAnchorsPEM) | include "partials.FlagIfNotEmpty" -}}
        {{- list "identity-scheme" .Values.identity.issuer.scheme | include "partials.FlagIfNotEmpty" -}}
        {{- list "cluster-domain" .Values.global.clusterDomain | include "partials.FlagIfNotEmpty" -}}
        {{- list "proxy-image" .Values.global.proxy.image.name | include "partials.FlagIfNotEmpty" -}}
        {{- list "proxy-image-pull-policy" .Values.global.proxy.image.pullPolicy | include "partials.FlagIfNotEmpty" -}}
        {{- list "proxy-init-image" .Values.global.proxyInit.image.name | include "partials.FlagIfNotEmpty" -}}
        {{- list "proxy-init-image-pull-policy" .Values.global.proxyInit.image.pullPolicy | include "partials.FlagIfNotEmpty" -}}
        {{- list "control-port" .Values.global.proxy.ports.control | include "partials.FlagIfNotEmpty" -}}
        {{- list "ignore-inbound-ports" .Values.global.proxyInit.ignoreInboundPorts | include "partials.FlagIfNotEmpty" -}}
        {{- list "ignore-outbound-ports" .Values.global.proxyInit.ignoreOutboundPorts | include "partials.FlagIfNotEmpty" -}}
        {{- list "inbound-port" .Values.global.proxy.ports.inbound | include "partials.FlagIfNotEmpty" -}}
        {{- list "admin-port" .Values.global.proxy.ports.admin | include "partials.FlagIfNotEmpty" -}}
        {{- list "outbound-port" .Values.global.proxy.ports.outbound | include "partials.FlagIfNotEmpty" -}}
        {{- list "proxy-cpu-request" .Values.global.proxy.resources.cpu.request | include "partials.FlagIfNotEmpty" -}}
        {{- list "proxy-cpu-limit" .Values.global.proxy.resources.cpu.limit | include "partials.FlagIfNotEmpty" -}}
        {{- list "proxy-memory-request" .Values.global.proxy.resources.memory.request | include "partials.FlagIfNotEmpty" -}}
        {{- list "proxy-memory-limit" .Values.global.proxy.resources.memory.limit | include "partials.FlagIfNotEmpty" -}}
        {{- list "proxy-uid" .Values.global.proxy.uid | include "partials.FlagIfNotEmpty" -}}
        {{- list "proxy-log-level" .Values.global.proxy.logLevel | include "partials.FlagIfNotEmpty" -}}
        {{- list "proxy-log-format" .Values.global.proxy.logFormat | include "partials.FlagIfNotEmpty" -}}
        {{- list "proxy-version" .Values.global.proxy.image.version | include "partials.FlagIfNotEmpty" -}}
        {{- list "proxy-init-image-version" .Values.global.proxyInit.image.version | include "partials.FlagIfNotEmpty" -}}
        {{- list "debug-image" .Values.debugContainer.image.name | include "partials.FlagIfNotEmpty" -}}
        {{- list "debug-image-pull-policy" .Values.debugContainer.image.pullPolicy | include "partials.FlagIfNotEmpty" -}}
        {{- list "debug-image-version" .Values.debugContainer.image.version | include "partials.FlagIfNotEmpty" -}}
        {{- list "destination-get-networks" .Values.global.proxy.destinationGetNetworks | include "partials.FlagIfNotEmpty" -}}
        {{- list "outbound-connect-timeout" .Values.global.proxy.outboundConnectTimeout| include "partials.FlagIfNotEmpty" -}}
        {{- list "inbound-connect-timeout" .Values.global.proxy.inboundConnectTimeout | include "partials.FlagIfNotEmpty"}}
        - -omit-webhook-side-effects={{.Values.omitWebhookSideEffects}}
        - -cni-enabled={{.Values.global.cniEnabled}}
        - -enable-external-profiles={{.Values.global.proxy.enableExternalProfiles}}
        image: {{.Values.controllerImage}}:{{default .Values.global.linkerdVersion .Values.global.controllerImageVersion}}
        imagePullPolicy: {{.Values.global.imagePullPolicy}}
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
        {{- if .Values.proxyInjectorResources -}}
        {{- include "partials.resources" .Values.proxyInjectorResources | nindent 8 }}
        {{- end }}
        securityContext:
          runAsUser: {{.Values.controllerUID}}
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
      {{- $tree := deepCopy . }}      
      {{- if not (empty .Values.proxyInjectorProxyResources) }}
      {{- $r := merge .Values.proxyInjectorProxyResources .Values.global.proxy.resources }}
      {{- $_ := set $tree.Values.global.proxy "resources" $r }}
      {{- end }}
      - {{- include "partials.proxy" $tree | indent 8 | trimPrefix (repeat 7 " ") }}
      {{ if not .Values.global.cniEnabled -}}
      initContainers:
      - {{- include "partials.proxy-init" . | indent 8 | trimPrefix (repeat 7 " ") }}
      {{ end -}}
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      {{ if .Values.global.controlPlaneTracing -}}
      - {{- include "partials.proxy.volumes.labels" . | indent 8 | trimPrefix (repeat 7 " ") }}
      {{ end -}}
      {{ if not .Values.global.cniEnabled -}}
      - {{- include "partials.proxyInit.volumes.xtables" . | indent 8 | trimPrefix (repeat 7 " ") }}
      {{ end -}}
      - {{- include "partials.proxy.volumes.identity" . | indent 8 | trimPrefix (repeat 7 " ") }}
---
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: {{.Values.global.namespace}}
  labels:
    {{.Values.global.controllerComponentLabel}}: proxy-injector
    {{.Values.global.controllerNamespaceLabel}}: {{.Values.global.namespace}}
  annotations:
    {{.Values.global.createdByAnnotation}}: {{default (printf "linkerd/helm %s" .Values.global.linkerdVersion) .Values.global.cliVersion}}
spec:
  type: ClusterIP
  selector:
    {{.Values.global.controllerComponentLabel}}: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
